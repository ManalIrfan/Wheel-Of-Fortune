/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;




/**
 *
 * @author tweet
 */
public class Level_Hard extends JFrame implements ActionListener {

    /**
     * Creates new form Level_Hard
     */
    public Level_Hard() {
        initComponents();
        this.getContentPane().setBackground(new Color(25,114,120));
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        jButton1.addActionListener(this);
        jButton2.addActionListener(this);
        jTextField1.setEditable(false);
        this.setTitle("GUI of Fortune - HARD");
        jButton2.setEnabled(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel1.setBackground(new Color(25,114,120));
        jPanel2.setBackground(new Color(238,108,77));
        

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\tweet\\Documents\\WheelOfFortuneNetBeans\\Untitled.png")); // NOI18N
        
        

        
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel2.setOpaque(true);
        
        
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel3.setOpaque(true);
                 
       
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel4.setOpaque(true); 
                 
        
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));     
        jLabel5.setOpaque(true);
        
        
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel6.setOpaque(true); 
      
         
        
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel7.setOpaque(true);
       
      
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel8.setOpaque(true); 
                 
       
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel9.setOpaque(true);
        

       
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel10.setOpaque(true); 
        
  
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel11.setOpaque(true);    
           

     
        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel12.setOpaque(true); 
        

      
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel13.setOpaque(true);
        

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jLabel14.setFont(new java.awt.Font("Venus Rising", 0, 18)); // NOI18N
        jLabel14.setText("Player 1");

        jLabel15.setFont(new java.awt.Font("Venus Rising", 0, 18)); // NOI18N
        jLabel15.setText("Player 2");

        jButton1.setText("Start Game");

        jButton2.setText("Check");

        jTextField1.setText("");

        jLabel16.setFont(new java.awt.Font("Verdana Pro", 1, 18)); // NOI18N
        jLabel16.setText("Guess the Character Here");

        
        jLabel17.setText("Hint:");
        jLabel17.setFont(new Font("DialogInput",Font.ITALIC,25));

        jLabel18.setText("");

        jLabel19.setText("0");
        jLabel19.setFont(new Font("Serif",Font.BOLD,25));

        jLabel20.setText("0");
        jLabel20.setFont(new Font("Serif",Font.BOLD,25));
 
         
        jLabel21.setText("Letters Used");
        jLabel21.setFont(new Font("Monospaced",Font.BOLD,20));

        jLabel22.setText("");
        jLabel22.setFont(new Font("Monospaced",Font.BOLD,20));
        

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(433, 433, 433))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(238, 238, 238)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(129, 129, 129)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel18))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22))
                .addGap(75, 75, 75)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Level_Hard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Level_Hard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Level_Hard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Level_Hard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Level_Hard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    
    //Start Coding Here
    
    int ScoreP1;
    int ScoreP2;
    Random r = new Random();
    int random = r.nextInt((5-0)+1);
    
    String[] words = {"COPYRIGHTABLE","DEMOGRAPHICS","QUESTIONABLY","STENOGRAPHIC","AMBIDEXTROUS","LEXICOGRAPHY"};
                     
    public String phraseGen()
    {
      String phrase = words[random];
      return phrase;
    
    }
    
    public String getHint()
    {
    
      String hint = "";
      
      switch(random)
      {
         case 0: hint = "Exclusive right to make copies of someone elses work";
                 break;
         case 1: hint = "Statistical data relating to the population ";
                 break;
         case 2: hint = "Doubtful propriety";
                 break;
         case 3: hint = "The art of writing in shorthand";
                 break; 
         case 4: hint = "A person who is able to use both hands equally well";
                 break;
         case 5: hint = "A person who compiles dictionaries";
                 break;    
      
      }
      
      return hint;
    
    
    
    }
    
    char first,second,third,fourth,fifth,sixth,seventh,eighth,ninth,tenth,eleventh,twelwth;
    String wordChosen = phraseGen();
    boolean playerTurn1 = true;
    boolean playerTurn2 = false;
    String firstName = "Player 1";
    String secondName = "Player 2";
    String currentPlayer = "";
    int points = 0;
    int pointsP1;
    int pointsP2;
    CasesLevel fortune = new CasesLevel();
    int count = 0;
    Winner win = new Winner();
    String valuesDone = "";
    
    
    public void actionPerformed(ActionEvent e)
    {
    
         if(e.getSource() == jButton1)
         {
         
            firstName = JOptionPane.showInputDialog(null,"Please enter the name of Player 1");
            secondName = JOptionPane.showInputDialog(null,"Please enter the name of Player 2");
            
            jLabel14.setText(firstName);
            jLabel15.setText(secondName);
            
            currentPlayer = firstName;
                                
            jButton1.setEnabled(false);
            jTextField1.setEditable(true);
            
            
            first = wordChosen.charAt(0);
            second = wordChosen.charAt(1);
            third = wordChosen.charAt(2);
            fourth = wordChosen.charAt(3);
            fifth = wordChosen.charAt(4);
            sixth = wordChosen.charAt(5);
            seventh = wordChosen.charAt(6);
            eighth = wordChosen.charAt(7);
            ninth = wordChosen.charAt(8);
            tenth = wordChosen.charAt(9);
            eleventh = wordChosen.charAt(10);
            twelwth = wordChosen.charAt(11);

         
            jLabel2.setFont(new Font("Serif",Font.BOLD,40));
            jLabel3.setFont(new Font("Serif",Font.BOLD,40));
            jLabel4.setFont(new Font("Serif",Font.BOLD,40));
            jLabel5.setFont(new Font("Serif",Font.BOLD,40));
            jLabel6.setFont(new Font("Serif",Font.BOLD,40));    
            jLabel7.setFont(new Font("Serif",Font.BOLD,40)); 
            jLabel8.setFont(new Font("Serif",Font.BOLD,40));
            jLabel9.setFont(new Font("Serif",Font.BOLD,40));
            jLabel10.setFont(new Font("Serif",Font.BOLD,40));
            jLabel11.setFont(new Font("Serif",Font.BOLD,40));
            jLabel12.setFont(new Font("Serif",Font.BOLD,40));    
            jLabel13.setFont(new Font("Serif",Font.BOLD,40));  
            
            String hintShown; 
            hintShown = getHint();
            
            
         
            jLabel18.setText(hintShown);
            jLabel18.setFont(new Font("Serif",Font.BOLD,15));
            JOptionPane.showMessageDialog(null,"Its" + currentPlayer + " 's turn");
            jButton2.setEnabled(true);
         
         }else if(e.getSource() == jButton2)
         {
         
            String input = jTextField1.getText().toUpperCase();
            
            if(input.length() > 1)
            {
               JOptionPane.showMessageDialog(null,"Please enter only one letter at a time");
               jTextField1.setText("");
            }else{
            
            int index = 0;
            
            try
            {
               char inputCh = input.charAt(0);
               index = wordChosen.indexOf(input.charAt(0));
               
               StringBuilder sb = new StringBuilder();
               sb.append(input.charAt(0));
            
                valuesDone = valuesDone + sb.toString();
                jLabel22.setText(valuesDone + " ");

               
                  if(wordChosen.contains(input))
                  {
                  
                     switch(index)
                     {
                     
                        case 0: jLabel3.setText(String.valueOf(first));
                                
                                if(currentPlayer == firstName)
                                {
                                    fortune.setVisible(true); 
                                    points = fortune.returnScore();                               
                                    pointsP1 += points;
                                    jLabel19.setText(String.valueOf(pointsP1));
                                    count++;
                                 
                                }else if(currentPlayer == secondName)
                                {
                                
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();

                                    pointsP2 += points;
                                    jLabel20.setText(String.valueOf(pointsP2));
                                    count++;
                                
                                }
                                break;      
                        case 1: jLabel2.setText(String.valueOf(second));
                                
                                if(currentPlayer == firstName)
                                {
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();

                                    pointsP1 += points;
                                    jLabel19.setText(String.valueOf(pointsP1));
                                    count++;
                                 
                                }else if(currentPlayer == secondName)
                                {
                                
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();

                                    pointsP2 += points;
                                    jLabel20.setText(String.valueOf(pointsP2));
                                    count++;
                                
                                }
                                break;  
                                
                         case 2: jLabel4.setText(String.valueOf(third));
                                
                                if(currentPlayer == firstName)
                                {
                                    fortune.setVisible(true);
                                   points = fortune.returnScore();
                                    pointsP1 += points;
                                    jLabel19.setText(String.valueOf(pointsP1));
                                    count++;
                                 
                                }else if(currentPlayer == secondName)
                                {
                                
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();

                                    pointsP2 += points;
                                    jLabel20.setText(String.valueOf(pointsP2));
                                    count++;
                                
                                }
                                break;  
                         case 3: jLabel5.setText(String.valueOf(fourth));
                                
                                if(currentPlayer == firstName)
                                {
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();

                                    pointsP1 += points;
                                    jLabel19.setText(String.valueOf(pointsP1));
                                    count++;
                                 
                                }else if(currentPlayer == secondName)
                                {
                                
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();

                                    pointsP2 += points;
                                    jLabel20.setText(String.valueOf(pointsP2));
                                    count++;
                                
                                }
                                break;
                          case 4: jLabel6.setText(String.valueOf(fifth));
                                
                                if(currentPlayer == firstName)
                                {
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();

                                    pointsP1 += points;
                                    jLabel19.setText(String.valueOf(pointsP1));
                                    count++;
                                 
                                }else if(currentPlayer == secondName)
                                {
                                
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();
                                    pointsP2 += points;
                                    jLabel20.setText(String.valueOf(pointsP2));
                                    count++;
                                
                                }
                                break; 
                          case 5: jLabel7.setText(String.valueOf(sixth));
                                
                                if(currentPlayer == firstName)
                                {
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();

                                    pointsP1 += points;
                                    jLabel19.setText(String.valueOf(pointsP1));
                                    count++;
                                 
                                }else if(currentPlayer == secondName)
                                {
                                
                                    fortune.setVisible(true);
                                   points = fortune.returnScore();

                                    pointsP2 += points;
                                    jLabel20.setText(String.valueOf(pointsP2));
                                    count++;
                                
                                }
                                break;
                          case 6: jLabel8.setText(String.valueOf(seventh));
                                
                                if(currentPlayer == firstName)
                                {
                                    fortune.setVisible(true);
                                points = fortune.returnScore();

                                    pointsP1 += points;
                                    jLabel19.setText(String.valueOf(pointsP1));
                                    count++;
                                 
                                }else if(currentPlayer == secondName)
                                {
                                
                                    fortune.setVisible(true);
                              points = fortune.returnScore();

                                    pointsP2 += points;
                                    jLabel20.setText(String.valueOf(pointsP2));
                                    count++;
                                
                                }
                                break; 
                          case 7: jLabel9.setText(String.valueOf(eighth));
                                
                                if(currentPlayer == firstName)
                                {
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();

                                    pointsP1 += points;
                                    jLabel19.setText(String.valueOf(pointsP1));
                                    count++;
                                 
                                }else if(currentPlayer == secondName)
                                {
                                
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();

                                    pointsP2 += points;
                                    jLabel20.setText(String.valueOf(pointsP2));
                                    count++;
                                
                                }
                                break; 
                           case 8: jLabel10.setText(String.valueOf(ninth));
                                
                                if(currentPlayer == firstName)
                                {
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();
                                    pointsP1 += points;
                                    jLabel19.setText(String.valueOf(pointsP1));
                                    count++;
                                 
                                }else if(currentPlayer == secondName)
                                {
                                
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();
                                    pointsP2 += points;
                                    jLabel20.setText(String.valueOf(pointsP2));
                                    count++;
                                
                                }
                                break;  
                                
                           case 9: jLabel11.setText(String.valueOf(tenth));
                                
                                if(currentPlayer == firstName)
                                {
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();

                                    pointsP1 += points;
                                    jLabel19.setText(String.valueOf(pointsP1));
                                    count++;
                                 
                                }else if(currentPlayer == secondName)
                                {
                                
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();
                                    pointsP2 += points;
                                    jLabel20.setText(String.valueOf(pointsP2));
                                    count++;
                                
                                }
                                break;  
                           case 10: jLabel12.setText(String.valueOf(eleventh));
                                
                                if(currentPlayer == firstName)
                                {
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();
                                    pointsP1 += points;
                                    jLabel19.setText(String.valueOf(pointsP1));
                                    count++;
                                 
                                }else if(currentPlayer == secondName)
                                {
                                
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();
                                    pointsP2 += points;
                                    jLabel20.setText(String.valueOf(pointsP2));
                                    count++;
                                
                                }
                                break;   
                           case 11: jLabel13.setText(String.valueOf(twelwth));
                                
                                if(currentPlayer == firstName)
                                {
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();
                                    pointsP1 += points;
                                    jLabel19.setText(String.valueOf(pointsP1));
                                    count++;
                                 
                                }else if(currentPlayer == secondName)
                                {
                                
                                    fortune.setVisible(true);
                                    points = fortune.returnScore();
                                    pointsP2 += points;
                                    jLabel20.setText(String.valueOf(pointsP2));
                                    count++;
                                
                                }
                                break; 
                                
                                                                  
                     }
                  
                  
                  }else 
                     
                     if(currentPlayer == firstName)
                     {
                        currentPlayer = secondName;
                        JOptionPane.showMessageDialog(null,currentPlayer + "'s turn");
                        
                     }else if(currentPlayer == secondName)
                     {
                        
                        currentPlayer = firstName;
                        JOptionPane.showMessageDialog(null, currentPlayer + "'s turn");
                       
                        
                     }
               
            
            
            }catch(Exception f)
            {
               JOptionPane.showMessageDialog(null,"Please enter a char");
            
            }
         
            }
            System.out.println(input);
            jTextField1.setText("");
            
         }  if(count == 12)
            {  
               if(pointsP1 > pointsP1)
               {
                  win.setWinner(firstName,pointsP1);
                  win.setVisible(true);
                  this.setVisible(false);
               
               }else if(pointsP2 > pointsP1)
               {
               
                  win.setWinner(secondName,pointsP2);
                  win.setVisible(true);
                  this.setVisible(false);
               
               }         
         
            }
    
    
    
    
    }
    
}

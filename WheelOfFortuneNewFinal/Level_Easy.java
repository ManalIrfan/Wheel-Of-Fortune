/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;


/**
 *
 * @author tweet
 */
public class Level_Easy extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form Level_Easy
     */
    public Level_Easy() {
        initComponents();
        
        this.getContentPane().setBackground(new Color(25,114,120) );
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setTitle("GUI Of Fortune - EASY");
        jButton1.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        jTextField7.setEditable(false); 
         
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(25, 114, 120));
        setForeground(new Color(25,114,120));

        jPanel1.setBackground(new java.awt.Color(238, 108, 77));
        jPanel1.setForeground(new java.awt.Color(238, 108, 77));

        jLabel6.setOpaque(true); // first

        jLabel7.setOpaque(true); // second

        jLabel8.setOpaque(true);

        jLabel9.setOpaque(true);

        jLabel10.setOpaque(true);

        jLabel11.setOpaque(true);
        
        jButton2.addActionListener(this);
        jButton1.addActionListener(this);
         
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Guess the Letter");

        jButton1.setText("Check");

        jLabel2.setFont(new java.awt.Font("Venus Rising", 0, 24)); // NOI18N
        jLabel2.setText("Player 1");

        jLabel3.setFont(new java.awt.Font("Verdana Pro SemiBold", 0, 18)); // NOI18N
        jLabel3.setText("0");

        jLabel4.setFont(new java.awt.Font("Venus Rising", 0, 24)); // NOI18N
        jLabel4.setText("Player 2");

        jLabel5.setFont(new java.awt.Font("Verdana Pro SemiBold", 0, 18)); // NOI18N
        jLabel5.setText("0");

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Light", 3, 20)); // NOI18N
        jLabel12.setText("Hint:");

        jLabel13.setText("");

        jLabel14.setIcon(new javax.swing.ImageIcon("C:\\Users\\tweet\\Documents\\WheelOfFortuneNetBeans\\Untitled.png")); // NOI18N
        

        jLabel15.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 20)); // NOI18N
        jLabel15.setText("Letters Used");

        jLabel16.setFont(new Font("Yu Gothic UI Semibold",Font.PLAIN,24));

        jButton2.setText("Start Game");
        jButton2.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(162, 162, 162)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(86, 86, 86))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        jLabel2.getAccessibleContext().setAccessibleName("jPlayer1");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Level_Easy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Level_Easy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Level_Easy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Level_Easy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Level_Easy().setVisible(true);
            }
        });
        
                
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
    
    // Start Coding Here
    
    int ScoreP1;
    int ScoreP2;
    Random r = new Random();
    int random = r.nextInt((5-0)+1)+0;

    
    String[] words = {"UPDATE", "PLANET", "ANSWER", "SYMBOL", "SISTER", "PRISON"};
    
    public String phraseGen()
    {
      
           
      String phrase = words[random];
      
      return phrase;
    
    }
    
        
    public String getHint()
    {
    
      String hint = "";
      
         switch(random)
         {
            case 0: hint = "Keep me ____ with the project";
                    break;
            case 1: hint = "Earth is a ..?";
                    break; 
            case 2: hint = "Questions and ? ";
                    break; 
            case 3: hint = "Dove is a _____ of peace ";
                    break; 
            case 4: hint = "Hey soul ...?";
                    break;
            case 5: hint = "Commit a crime and you end up here..";
                    break ;
        
      }
      
      return hint;
    
    }
    
    char first,second,third,fourth,fifth,sixth;
    String wordChosen = phraseGen();
    boolean playerTurn1 = true;
    boolean playerTurn2 = false;
    String firstName = "Player 1";
    String secondName = "Player 2";
    String currentPlayer = "";
    
    int pointsP1;
    int pointsP2;
    CasesLevel fortune = new CasesLevel();
    int points = 0;
    int count = 0;;
    Winner win = new Winner();
    String valuesDone = "";


    
        
    public void actionPerformed(ActionEvent e)
    {
    
      if(e.getSource() == jButton2)
      {
                                       
           
            firstName = JOptionPane.showInputDialog(null,"Please enter the name of Player 1");
            secondName = JOptionPane.showInputDialog(null,"Please enter the name of Player 2");
            
            jLabel2.setText(firstName);
            jLabel4.setText(secondName);
            
            currentPlayer = firstName;
                                
            jButton2.setEnabled(false);
            jTextField7.setEditable(true);
            
            
            first = wordChosen.charAt(0);
            second = wordChosen.charAt(1);
            third = wordChosen.charAt(2);
            fourth = wordChosen.charAt(3);
            fifth = wordChosen.charAt(4);
            sixth = wordChosen.charAt(5);
            
            
                        
            
            
            jLabel6.setFont(new Font("Serif",Font.BOLD,40));
            jLabel7.setFont(new Font("Serif",Font.BOLD,40));
            jLabel8.setFont(new Font("Serif",Font.BOLD,40));
            jLabel9.setFont(new Font("Serif",Font.BOLD,40));
            jLabel10.setFont(new Font("Serif",Font.BOLD,40));    
            jLabel11.setFont(new Font("Serif",Font.BOLD,40));
            
            String hintShown;
            
            hintShown = getHint();
            jLabel13.setText(hintShown);
            jLabel13.setFont(new Font("Serif",Font.BOLD,15));
            JOptionPane.showMessageDialog(null,"Its " + currentPlayer + "'s turn");
            jButton1.setEnabled(true);
                                    
            

      }else if(e.getSource() == jButton1)
      {
      
            String input = jTextField7.getText().toUpperCase();
                       
                        
            if(input.length() > 1)
            {
               JOptionPane.showMessageDialog(null,"Please enter only one letter at a time");
               jTextField7.setText("");
               
            }else{
            
                        
            
            int index = 0;
            try{
            
               char inputCh = input.charAt(0);
               index = wordChosen.indexOf(input.charAt(0));
               
                StringBuilder sb = new StringBuilder();
                sb.append(input.charAt(0));
            
                valuesDone = valuesDone + sb.toString();
                jLabel16.setText(valuesDone + " ");

               
               if(wordChosen.contains(input))
               {
               
               
               switch(index)
               {
               
                  case 0: jLabel6.setText(String.valueOf(first));
                          
                           if(currentPlayer == firstName)
                           {
                              fortune.setVisible(true);
                              points = fortune.returnScore();
                              System.out.println(points);
                              pointsP1 += points;
                              jLabel5.setText(String.valueOf(pointsP1));
                              count++;
                              
                              
                              
                              
                           }else if(currentPlayer == secondName)
                           {
                              fortune.setVisible(true);
                              points= fortune.returnScore();
                              pointsP2 += points;
                              jLabel3.setText(String.valueOf(pointsP2));
                              count++;
                              
                              
                              
                           }  
                           break;
                  case 1: jLabel7.setText(String.valueOf(second)); 
                          
                           if(currentPlayer == firstName)
                           {
                              fortune.setVisible(true);
                              points = fortune.returnScore();
                              pointsP1 += points;
                              jLabel5.setText(String.valueOf(pointsP1));
                              count++;
                              
                              
                              
                              
                           }else if(currentPlayer == secondName)
                           {
                              fortune.setVisible(true);
                              points = fortune.returnScore();
                              pointsP2 += points;
                              jLabel3.setText(String.valueOf(pointsP2));
                              count++;
                              
                              
                              
                           }          
                           break;
                  case 2: jLabel8.setText(String.valueOf(third));
                           
                           if(currentPlayer == firstName)
                           {
                              fortune.setVisible(true);
                              points = fortune.returnScore();
                              pointsP1 += points;
                              jLabel5.setText(String.valueOf(pointsP1));
                              count++;
                              
                             
                              
                              
                           }else if(currentPlayer == secondName)
                           {
                              fortune.setVisible(true);
                              points = fortune.returnScore();
                              pointsP2 += points;
                              jLabel3.setText(String.valueOf(pointsP2));
                              count++;
                              
                              
                             
                           }  
                           break;
                  case 3: jLabel9.setText(String.valueOf(fourth));
                          

                           if(currentPlayer == firstName)
                           {  
                              fortune.setVisible(true);
                              points = fortune.returnScore();
                              pointsP1 += points;
                              jLabel5.setText(String.valueOf(pointsP1));
                              count++;
                              
                              
                              
                              
                           }else if(currentPlayer == secondName)
                           {
                              fortune.setVisible(true);
                              points = fortune.returnScore();
                              pointsP2 += points;
                              jLabel3.setText(String.valueOf(pointsP2));
                              count++;
                             
                              
                             
                           }  

                           break;
                  case 4: jLabel10.setText(String.valueOf(fifth));
                           

                           if(currentPlayer == firstName)
                           {
                              fortune.setVisible(true);
                              points = fortune.returnScore();
                              pointsP1 += points;
                              jLabel5.setText(String.valueOf(pointsP1));
                              count++;
                              
                             
                              
                              
                           }else if(currentPlayer == secondName)
                           {
                              fortune.setVisible(true);
                              points = fortune.returnScore();
                              pointsP2 += points;
                              jLabel3.setText(String.valueOf(pointsP2));
                              count++;
                              
                              
                             
                           }  

                           break;
                  case 5: jLabel11.setText(String.valueOf(sixth));  
                           
                           if(currentPlayer == firstName)
                           {  
                              fortune.setVisible(true);
                              points = fortune.returnScore();
                              pointsP1 += points;
                              jLabel5.setText(String.valueOf(pointsP1));
                              count++;
                             
                              
                              
                           }else if(currentPlayer == secondName)
                           {
                              fortune.setVisible(true);
                              points = fortune.returnScore();
                              pointsP2 += points;
                              jLabel3.setText(String.valueOf(pointsP2));
                              count++;
                              
                              
                            
                           }  
                 
                       break;
                  }
                           
               }else
            
                  if(currentPlayer == firstName)
                  {
                     currentPlayer = secondName;
                     JOptionPane.showMessageDialog(null, currentPlayer +"'s Turn");
                  
                  }else if(currentPlayer == secondName)
                  {
                     currentPlayer = firstName;
                     JOptionPane.showMessageDialog(null, currentPlayer +"'s Turn");
                  }

               
             

               }catch(Exception f)
               { JOptionPane.showMessageDialog(null, "Please enter a char");} 
             
             }
                         
            System.out.println(input);         
            jTextField7.setText("");  
                         
               if(count == 6)
               {
               
                  int morePoints = 0;
                  
                  if(pointsP1 > pointsP2)
                  {
                  
                     System.out.println(firstName + " won with "+ pointsP1 + " points");
                     
                    
                     win.setWinner(firstName, pointsP1);
                     win.setVisible(true);
                     this.setVisible(false);
                   
                     
                  }else if(pointsP2 > pointsP1)
                  {
                  
                     System.out.println(secondName +" won with "+ pointsP2 + " points");
                     win.setWinner(secondName, pointsP2);
                     win.setVisible(true);
                     this.setVisible(false);

                  }
               
               
               }

               
      }
    
    }
}

